// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20181220182655_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.DomainModel.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Model.DomainModel.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Genre");

                    b.Property<int>("RunningTimeInMinutes");

                    b.Property<string>("Title");

                    b.Property<int>("YearOfRelease");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Genre = 0,
                            RunningTimeInMinutes = 142,
                            Title = "The Shawshank Redemption",
                            YearOfRelease = 1994
                        },
                        new
                        {
                            MovieId = 2,
                            Genre = 1,
                            RunningTimeInMinutes = 175,
                            Title = "The Godfather",
                            YearOfRelease = 1972
                        },
                        new
                        {
                            MovieId = 3,
                            Genre = 1,
                            RunningTimeInMinutes = 202,
                            Title = "The Godfather: Part II",
                            YearOfRelease = 1974
                        },
                        new
                        {
                            MovieId = 4,
                            Genre = 2,
                            RunningTimeInMinutes = 152,
                            Title = "The Dark Knight",
                            YearOfRelease = 2008
                        },
                        new
                        {
                            MovieId = 5,
                            Genre = 0,
                            RunningTimeInMinutes = 96,
                            Title = "12 Angry Men",
                            YearOfRelease = 1957
                        },
                        new
                        {
                            MovieId = 6,
                            Genre = 0,
                            RunningTimeInMinutes = 195,
                            Title = "Schindler's List",
                            YearOfRelease = 1993
                        },
                        new
                        {
                            MovieId = 7,
                            Genre = 3,
                            RunningTimeInMinutes = 201,
                            Title = "The Lord of the Rings: The Return of the King",
                            YearOfRelease = 2003
                        },
                        new
                        {
                            MovieId = 8,
                            Genre = 0,
                            RunningTimeInMinutes = 154,
                            Title = "Pulp Fiction",
                            YearOfRelease = 1994
                        },
                        new
                        {
                            MovieId = 9,
                            Genre = 4,
                            RunningTimeInMinutes = 148,
                            Title = "The Good, the Bad and the Ugly",
                            YearOfRelease = 1966
                        },
                        new
                        {
                            MovieId = 10,
                            Genre = 2,
                            RunningTimeInMinutes = 139,
                            Title = "Fight Club",
                            YearOfRelease = 1999
                        });
                });

            modelBuilder.Entity("Model.DomainModel.Rating", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("MovieId");

                    b.Property<int>("Value");

                    b.HasKey("UserId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            MovieId = 1,
                            Value = 5
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 2,
                            Value = 5
                        },
                        new
                        {
                            UserId = 3,
                            MovieId = 2,
                            Value = 4
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 2,
                            Value = 3
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 2,
                            Value = 3
                        },
                        new
                        {
                            UserId = 6,
                            MovieId = 2,
                            Value = 4
                        },
                        new
                        {
                            UserId = 7,
                            MovieId = 2,
                            Value = 5
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 3,
                            Value = 5
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 4,
                            Value = 5
                        },
                        new
                        {
                            UserId = 3,
                            MovieId = 4,
                            Value = 1
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 5,
                            Value = 5
                        },
                        new
                        {
                            UserId = 3,
                            MovieId = 5,
                            Value = 4
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 5,
                            Value = 4
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 5,
                            Value = 4
                        },
                        new
                        {
                            UserId = 6,
                            MovieId = 5,
                            Value = 4
                        },
                        new
                        {
                            UserId = 7,
                            MovieId = 5,
                            Value = 3
                        },
                        new
                        {
                            UserId = 8,
                            MovieId = 5,
                            Value = 5
                        },
                        new
                        {
                            UserId = 9,
                            MovieId = 5,
                            Value = 5
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 3,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 6,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 7,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 8,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 9,
                            MovieId = 6,
                            Value = 5
                        },
                        new
                        {
                            UserId = 2,
                            MovieId = 7,
                            Value = 5
                        },
                        new
                        {
                            UserId = 3,
                            MovieId = 7,
                            Value = 5
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 7,
                            Value = 5
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 7,
                            Value = 4
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 8,
                            Value = 5
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 8,
                            Value = 4
                        },
                        new
                        {
                            UserId = 4,
                            MovieId = 9,
                            Value = 2
                        },
                        new
                        {
                            UserId = 5,
                            MovieId = 9,
                            Value = 4
                        });
                });

            modelBuilder.Entity("Model.DomainModel.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "User2"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "User3"
                        },
                        new
                        {
                            UserId = 4,
                            Name = "User4"
                        },
                        new
                        {
                            UserId = 5,
                            Name = "User5"
                        },
                        new
                        {
                            UserId = 6,
                            Name = "User6"
                        },
                        new
                        {
                            UserId = 7,
                            Name = "User7"
                        },
                        new
                        {
                            UserId = 8,
                            Name = "User8"
                        },
                        new
                        {
                            UserId = 9,
                            Name = "User9"
                        },
                        new
                        {
                            UserId = 10,
                            Name = "User10"
                        });
                });

            modelBuilder.Entity("Model.DomainModel.Rating", b =>
                {
                    b.HasOne("Model.DomainModel.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.DomainModel.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
